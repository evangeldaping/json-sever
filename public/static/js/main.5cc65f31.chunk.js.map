{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/FooterComponent.js","components/DishDetailsComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","About","RenderLeader","leaders","leaders_list","left","object","body","heading","list","title","Footer","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","defaultValue","React","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cc65f31.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else         \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <> \r\n                <Navbar dark expand=\"md fixed-top\">\r\n                    <div className=\"container \">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \r\n                                alt=\"Ristorante con Fusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>               \r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\" >\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\" >\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\" >\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\" >\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>                        \r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"roe row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our\r\n                                    lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>    \r\n                    </div>   \r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else {\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? (\r\n              <CardSubtitle>{item.designation}</CardSubtitle>\r\n            ) : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.leader}\r\n            isLoading={props.leaderLoading}\r\n            errMess={props.leaderErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Label\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road\r\n                            <br/>\r\n                            Clear Water Bay, Kowloon\r\n                            <br/>\r\n                            HONG KONG\r\n                            <br/>\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n                            <br/>\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n                            <br/>\r\n                            <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n                            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a className=\"btn btn-primary\" href=\"tel:+85212345678\" role=\"button\">\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                Call\r\n                            </a>\r\n                            <a className=\"btn btn-info\" role=\"button\">\r\n                                <i className=\"fa fa-skype\"></i>\r\n                                Skype\r\n                            </a>\r\n                            <a className=\"btn btn-success\" href=\"mailto:confusion@food.net\" role=\"button\">\r\n                                <i className=\"fa fa-envelope-o\"></i>\r\n                                Email\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form  model=\"feedback\" onSubmit={\r\n                            (values) => this.handleSubmit(values)\r\n                        }>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\"\r\n                                    md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={\r\n                                            {\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15)\r\n                                            }\r\n                                        }/>\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }\r\n                                        }/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\"\r\n                                    md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={\r\n                                            {\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15)\r\n                                            }\r\n                                        }/>\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }\r\n                                        }/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\"\r\n                                    md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                        validators={\r\n                                            {\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15),\r\n                                                isNumber\r\n                                            }\r\n                                        }/>\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 numbers',\r\n                                                maxLength: 'Must be 15 numbers or less',\r\n                                                isNumber: 'Must be a number'\r\n                                            }\r\n                                        }/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\"\r\n                                    md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                                        validators={\r\n                                            {required, validEmail}\r\n                                        }/>\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email Address'\r\n                                            }\r\n                                        }/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={\r\n                                    {\r\n                                        size: 6,\r\n                                        offset: 2\r\n                                    }\r\n                                }>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox className=\"form-check-input\" model=\".agree\" name=\"agree\"/> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={\r\n                                    {\r\n                                        size: 3,\r\n                                        offset: 1\r\n                                    }\r\n                                }>\r\n                                    <Control.select className=\"form-control\" model=\".contactType\" name=\"contactType\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\"\r\n                                    md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea className=\"form-control\" id=\"message\" model=\".message\" name=\"message\" rows=\"12\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={\r\n                                    {\r\n                                        size: 10,\r\n                                        offset: 2\r\n                                    }\r\n                                }>\r\n                                    <Button color=\"primary\" type=\"submit\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\nfunction About(props) {\r\n  const RenderLeader = ({ leaders, leaderLoading, leaderErrMess }) => {\r\n    console.log(leaderLoading, leaderErrMess);\r\n\r\n    const leaders_list = leaders.map(leader => {\r\n      return (\r\n        <Fade in key={leader.id}>\r\n          <Media>\r\n            <Media left>\r\n              <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-2\">\r\n              <Media heading>{leader.name}</Media>\r\n              <p>{leader.designation}</p>\r\n              <p>{leader.description}</p>\r\n            </Media>\r\n          </Media>\r\n        </Fade>\r\n      );\r\n    });\r\n    // Returning the complete leader's list\r\n    if (leaderLoading) {\r\n      return <Loading />;\r\n    } else if (leaderErrMess) {\r\n      return <h4>{leaderErrMess}</h4>;\r\n    } else\r\n      return (\r\n        <Media list>\r\n          <Stagger in>{leaders_list}</Stagger>\r\n        </Media>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <RenderLeader\r\n            leaders={props.leaders}\r\n            leaderLoading={props.isLoading}\r\n            leaderErrMess={props.errMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Card,  CardImg,  CardText,  CardBody,  CardTitle,  Breadcrumb,  BreadcrumbItem,\r\n  Button,  Modal,  ModalHeader,  ModalBody,  Row,  Col,  Label} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n      <div className=\"col-12 col-md-12 m-1\">\r\n          <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null)\r\n        return(\r\n            <div className=\"col-12 col-md-12 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>           \r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/menu\">Menu</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments}\r\n                    postComment={props.postComment}\r\n                    dishId={props.dish.id}\r\n                    />\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    );\r\n    else\r\n        return(\r\n            <div></div>\r\n        )\r\n};\r\n\r\nclass CommentForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  \r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n    \r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();  \r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\"></span> Submit Comment\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n                \r\n                <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                        <Col md={10}>\r\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                className=\"form-control\"\r\n                                defaultValue=\"1\">\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                            </Control.select>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"author\" md={2}> Your Name </Label>\r\n                        <Col md={10}>\r\n                            <Control.text\r\n                                model=\".author\"\r\n                                id=\"author\"\r\n                                name=\"author\"\r\n                                placeholder=\"Your Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                minLength: minLength(3),\r\n                                maxLength: maxLength(15)\r\n                                }}\r\n                            />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".author\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                minLength: \"Must be greater than 2 characters\",\r\n                                maxLength: \"Must be 15 characters or less\"\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"message\" md={2}> Comment </Label>\r\n                        <Col md={10}>\r\n                            <Control.textarea\r\n                                className=\"form-control\"\r\n                                id=\"comment\"\r\n                                model=\".comment\"\r\n                                name=\"comment\"\r\n                                rows=\"6\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Col md={{ size: 12 }}>\r\n                            <Button color=\"primary\" value=\"submit\"> Submit </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishDetail;\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = comment => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {\r\n      console.log(\"post comments\", error.message);\r\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n  dispatch(dishesLoading(true));\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = errmess => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addDishes = dishes => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errmess => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = errmess => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addPromos = promos => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank for submitting feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted!\\nError: \" + error.message);\r\n    });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADER';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport DishDetail from \"./DishDetailsComponent\";\r\nimport {\r\n  postComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback\r\n} from \"../redux/ActionCreators\";\r\n\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    ),\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\r\n          }\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              dish => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    const AboutPage = () => {\r\n      return (\r\n        <About\r\n          leaders={this.props.leaders.leaders}\r\n          isLoading={this.props.leaders.isLoading}\r\n          errMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            <Switch location={this.props.location}>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route\r\n                exact\r\n                path=\"/menu\"\r\n                component={() => <Menu dishes={this.props.dishes} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/contactus\"\r\n                component={() => (\r\n                  <Contact\r\n                    resetFeedbackForm={this.props.resetFeedbackForm}\r\n                    postFeedback={this.props.postFeedback}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Route path=\"/aboutus\" component={AboutPage} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: null,\r\n                leaders: action.payload\r\n            };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                errMess: null,\r\n                leaders: []\r\n            }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n  \n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}